buildscript {
	dependencies {
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}
plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}
dependencies {
	compileClasspath('se.transmode.gradle:gradle-docker:1.2')

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation("io.springfox:springfox-swagger2:2.9.2")
	implementation("io.springfox:springfox-swagger-ui:2.9.2")
	implementation("org.springdoc:springdoc-openapi-ui:1.2.26")
	implementation("org.projectlombok:lombok:1.18.10")

	annotationProcessor("org.projectlombok:lombok:1.18.10")
	compile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml')
	implementation("com.h2database:h2:1.4.197")
	//implementation("org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE")
	implementation 'org.springframework.boot:spring-boot-starter-security'
	runtimeOnly 'mysql:mysql-connector-java'
	//implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}
test {
	useJUnitPlatform()
}
